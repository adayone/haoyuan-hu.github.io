<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[数据矿工]]></title>
  <link href="http://haoyuan-hu.github.io/atom.xml" rel="self"/>
  <link href="http://haoyuan-hu.github.io/"/>
  <updated>2014-01-16T23:03:29+08:00</updated>
  <id>http://haoyuan-hu.github.io/</id>
  <author>
    <name><![CDATA[胡浩源]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[帮张侃找女朋友]]></title>
    <link href="http://haoyuan-hu.github.io/blog/2013/12/19/find-girlfriend/"/>
    <updated>2013-12-19T19:04:48+08:00</updated>
    <id>http://haoyuan-hu.github.io/blog/2013/12/19/find-girlfriend</id>
    <content type="html"><![CDATA[<p>动车是杭州开往上海的， 我们的厂工张侃同学在西厂干活， 排除为了爱情现身的情况， 一周内有五天时间滞留杭州晚上可以出发邂逅。</p>

<p>妹子的情况比较复杂， 一种可能是暂时来杭州旅游， 常驻上海； 一种是去上海旅游， 常驻杭州； 一种是和我们的厂工相似， 周末往上海跑。但是从妹子在车上的表现分析：</p>

<ul>
  <li>如果是常坐动车的应该对温度情况有充分的了解， 不会出现衣服不够导致冻着。</li>
  <li>如果是从上海来杭州玩返程， 会对车上温度也必然有所了解</li>
</ul>

<p>所以我们断定， 这个妹子， 是从杭州出发去上海玩的！
因此， 我们的张侃同学一周有五天时间有可能和妹子发生邂逅。</p>

<p>根据杭州统计局的信息， 2012年杭州常住人口数目880.2万，女性人口占48.77%， 这里选择信任统计局的数据。</p>

<p>我们假设张侃同学热爱生活， 出入健身房， 游泳池， 学校等扎堆的地方， 日均能达到和100个陌生人接触（这是一个很恐怖的数字……其实我们作弊了）。</p>

<p>那个， 他一个月内再次遇到这个妹子的概率是 $ 20 \cdot 100 / 880.2w = 0.023\%$, 差不多是最近一次梵净山发生球状闪电的概率。</p>

<p>如果我们假设年龄， 教育程度， 会影响活动空间， 那么根据统计局数据， 杭州市大学（指大专及以上）文化程度的人口为164.27万人， 这个概率就变成了$20 \cdot 100 / 164.27w = 0.12\% $。 和汽车钥匙互开概率差不多。</p>

<p>所以……还是放弃一棵树， 追求整个森林比较靠谱。</p>

<p>我们先选择Drake公式计算张侃找到女朋友的概率。这个公式由“搜寻地外文明”计划发起人弗兰克·德雷克发明，原本为估算银河系中可能的地外文明数量。
Drake公式：</p>

<p>$N = R_{\ast} \cdot f_p \cdot n_e \cdot f_e \cdot f_i \cdot f_c \cdot L$</p>

<p>直接以两人相遇的概率来解释这个方程：</p>

<ul>
  <li>N 潜在女友的数量</li>
  <li>$R_{\ast}$ 中国的人口增长量</li>
  <li>$f_p$ 中国人口中女性的比例</li>
  <li>$n_e$ 中国的女性中住在浙江省的比例</li>
  <li>$f_e$ 年龄合适的女性在其中所占的比率</li>
  <li>$f_i$ 年龄合适并有大学文凭的女性在其中所占比率</li>
  <li>$f_c$ 年龄合适、有大学文凭、我觉得长得好看的女性人数所占比率</li>
  <li>$L$ 我遇见这样的一个女孩需要的时间</li>
</ul>

<p>这意味着，一个月内，张侃同学每天晚上（20天）出去，遇上一个22岁到30岁之间、大学毕业的理想女孩的概率大于百分之一。</p>

<p>当然还得考虑加进觉得码农幽默风趣的女孩的比率、单身女性的比率、能和码农相处甚欢的女性人数所占比率。</p>

<p>加进这些因素后，概率会大大降低，变成300，000分之一，比起找到外星文明的概率高了100倍，还不坏。</p>

<p>看到如此惨烈的情况， 我们老大震惊了， 决定向全阿里招聘优秀的算法工程师， 欢迎香甜可口的软妹子， 欢迎一起捡肥皂的好基友。欢迎加入天猫推荐算法团队。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[实时策略]]></title>
    <link href="http://haoyuan-hu.github.io/blog/2013/12/18/online-turn/"/>
    <updated>2013-12-18T14:53:55+08:00</updated>
    <id>http://haoyuan-hu.github.io/blog/2013/12/18/online-turn</id>
    <content type="html"><![CDATA[<p>传统的推荐以离线为主， 以预测用户偏好品牌为例，大致分为这几个步骤:</p>

<ul>
  <li>离线采集计算用户， 品牌等各个维度的特征。</li>
  <li>根据业务目标给出样本集合， 比如比较典型的CTR， 对于给定样本数据， 点击为正例， 不点击为负例。候选集的挑选有时候充满了trick， 尤其在业务的主体流量不是推荐的时候。</li>
  <li>使用模型进行离线训练， 以线性模型居多， 包括LR, pair-wise, list-wise等。在海量情况下， 复杂模型比较罕见。</li>
  <li>根据模型预测获得用户的偏好品牌列表。</li>
</ul>

<p>相对于直接利用热门或者协同过滤做出的推荐， 这种方式能够获得良好的提升以及更好的泛化能力， 但是面对以下几种情况无能为力：</p>

<ul>
  <li>每天有大量新用户拥入。</li>
  <li>用户对品牌的点击在过去没有特征， 看起来似乎是天外飞仙般出现， 但又不是热销。 </li>
  <li>无法实时的对用户的正反馈和负反馈进行算法上的回馈， 尤其是当你发现你X掉了一堆东西， 类似的商品还在源源不断的涌向你的时候。</li>
</ul>

<p>实时的数据对于推荐系统而言， 是一座新的金矿， 可以为用户进行更准确地推荐， 同时及时响应各种反馈， 提升用户体验。 用户能感受到推荐系统和他的交互， 会更主动积极的贡献自己的行为特点， 从而形成良性循环。</p>

<p>比较常见的一种做法是实时特征的引入， 训练过程依然在离线完成：</p>

<ol>
  <li>收集实时数据， 做离线训练</li>
  <li>做在线预测</li>
</ol>

<p>另一部分采用的是online learning, 利用用户不停的行为反馈（包含显式的和隐式的）， 来调整特征权重。</p>

<p>现在在考虑一种在线增强学习的方式， 假定我们现在有四种投放策略：a, b, c, d。
对于缺乏历史信息的新用户， 在没有任何信息的情况下， 我们先以轮播的方式在所有的位置投放a, b, c, d四种策略。
随后我们采集相应的反馈信息：</p>

<ul>
  <li>点击：显式正反馈</li>
  <li>删除： 显式负反馈</li>
  <li>未点击： 隐式负反馈</li>
</ul>

<p>在这一过程中快速积累用户对不同策略的敏感程度，同时对离线的预测结果进行纠正。</p>

<p>由于单独位置对用户的曝光机会有限， 需要以打通的眼光看待所有的投放位置， 将他作为一个整体：</p>

<ol>
  <li>收集到显式负反馈的策略在全局降分</li>
  <li>收集到显式负反馈的目标在全局过滤</li>
</ol>

<p>最轻量级的快速尝试方式是， 对于某部分用户而言， 预估的投放策略可信度已经低于热门了， 或者补全的时候采用相似算法的可信度已经低于热门了， 就可以通过快速切换策略达到在线选择的目的。</p>

<p>对于实时而言， 不仅仅是算法上的变更， 对系统架构也有巨大的挑战。
下图是Netflix的实时推荐的架构图：
<img src="http://haoyuan-hu.github.io/images/online系统.jpg" alt="Netflix架构" /></p>

<p>系统上， Netflix分为online, near online, offline三个部分， nearline是用户最近的行为数据， 利用流失计算获得一些结果， 产生的结果送到online 用以更新模型。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[该做什么是好]]></title>
    <link href="http://haoyuan-hu.github.io/blog/2013/12/17/octopress/"/>
    <updated>2013-12-17T17:07:47+08:00</updated>
    <id>http://haoyuan-hu.github.io/blog/2013/12/17/octopress</id>
    <content type="html"><![CDATA[<p>当我们评价一件事情值不值得去做， 应该花多少精力去做的时候， 应该考虑这几个因素：</p>

<ul>
  <li>收益</li>
  <li>是否随时间衰减</li>
  <li>损失</li>
  <li>是否随时间递增</li>
</ul>

<p>收益和收益衰减周期比较容易理解, 比如做这件事情能带来你健康， 金钱，升迁上得收益，以及持续的时间。</p>

<p>比如：</p>

<ul>
  <li>高收益，不衰减：环游世界，和大师来场心灵的碰撞。</li>
  <li>高收益，衰减：疯狂购物， 撸管。</li>
  <li>低收益，不衰减：读书， 运动，瑜伽。</li>
  <li>低收益，衰减：刷微博， 刷微信（这个最无聊了）。</li>
</ul>

<p>很少会有人在理性的情况下去做一件有损失的事情。
这里的损害指的是：
&gt; 如果你不去做这件事情， 会带来额外的损失是什么。比如拒绝一次无聊的聚餐可能会得罪那些邀请你的人。</p>

<p>比如：</p>

<ul>
  <li>高损失，递增：不及时治疗自己的疾病。</li>
  <li>高损失，不递增：拖延错过还房贷的时间。</li>
  <li>低损失，递增：不及时整理自己的家（哦， 单身屌丝们。。。），还记得破窗理论么。</li>
  <li>低损失，不递增：拖延错过还信用卡的时间。</li>
</ul>

<p>整体而言， 对于人要面对的复杂的事务， 当你没有足够的时间判断的时候， 只要记住问自己这几个问题：</p>

<ul>
  <li>做这件事情我的收益是什么，会随着时间累积吗？ 如果是， 做吧。</li>
  <li>不做这件事情我的损失是什么，会随着时间恶化吗? 如果是， 做吧。</li>
</ul>

<p>$a^2+b^2=\frac{1}{2}$</p>
]]></content>
  </entry>
  
</feed>
